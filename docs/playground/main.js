// Generated by Haxe 4.0.0-rc.3+29fc325fd
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	magic_IOUtil.fetchResource("bluebells.png",function(error,data) {
		var bytes = haxe_io_Bytes.ofData(data);
		var inputFile = new magic_File("input.png",bytes);
		var initialState = { example : examples_Examples.list[0], inputFiles : [inputFile], outputFiles : [], stdout : "", stderr : ""};
		app_Store.init(initialState);
		app_Store.getInstance().addStateChangeListener({ onStateChange : function(old,newState) {
			app_Component.renderDom(window.document.querySelector("#main"),new app_Layout({ state : newState}));
			return;
		}});
		app_Store.getInstance().setState(initialState);
		return;
	});
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var app_Component = function(p) {
	this.props = p;
};
app_Component.__name__ = true;
app_Component.renderDom = function(el,c) {
	var s = c.render();
	c.container = el;
	el.innerHTML = s;
	c._afterRender();
};
app_Component.prototype = {
	render: function() {
		throw new js__$Boot_HaxeError("Abstract method");
	}
	,afterRender: function() {
	}
	,_afterRender: function() {
		this.afterRender();
		if(this.props.children != null) {
			var _g = 0;
			var _g1 = this.props.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c._afterRender();
			}
		}
	}
	,query: function(sel) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.container.querySelectorAll(sel);
		while(_g1 < _g2.length) {
			var e = _g2[_g1];
			++_g1;
			_g.push(e);
		}
		return _g;
	}
	,queryOne: function(sel) {
		return this.container.querySelector(sel);
	}
	,__class__: app_Component
};
var app_Layout = function(p) {
	app_Component.call(this,p);
};
app_Layout.__name__ = true;
app_Layout.__super__ = app_Component;
app_Layout.prototype = $extend(app_Component.prototype,{
	render: function() {
		var _gthis = this;
		return "\n<h1>Magic playground</h1>\n<p>Welcome to Magic library playground! An image should be shown below (loaded as Magic bitmap). Play with the controls to see it in action. Click on output images to download them.</p>\n<br />\n<label>Load File <input type=\"file\"  class=\"loadFile\"></label> <br />\n<button class=\"getSource\">See Example Sources</button>\n\n" + examples_Examples.list.map(function(e) {
			return "<button class=\"" + e.name + " " + (_gthis.props.state.example.name == e.name ? "selected" : "") + "\">" + e.name + "</button>";
		}).join("\n") + "\n<br />\n\n<img class=\"input\" src=\"" + this.props.state.inputFiles[0].asDataUrl("image/png") + "\"/>\n\n<table>\n<tr><td><h3>stdout</h3></td><td><h3>stderr</h3></td></tr>\n<tr>\n<td><textarea class=\"stdout\">" + this.props.state.stdout + "</textarea></td>\n<td><textarea class=\"stderr\">" + this.props.state.stderr + "</textarea></td>\n</tr>\n</table>\n\n\n" + this.props.state.outputFiles.map(function(f) {
			return "<img class=\"output\" src=\"${output.asDataUrl('image/png')}\" />";
		}).join("\n") + "\n\n<br />\n\n<style>\n" + app_Styles.css + "\n</style>\n  ";
	}
	,applicationDownload: function(url,filename) {
		window.fetch(url).then(function(response) {
			return response.blob();
		}).then(function(blob) {
			var a = js_Boot.__cast(window.document.createElement("a") , HTMLAnchorElement);
			a.href = URL.createObjectURL(blob);
			a.setAttribute("download",filename);
			a.click();
			return;
		});
	}
	,afterRender: function() {
		var _gthis = this;
		this.queryOne(".identify").addEventListener("click",function(e) {
			_gthis.exampleSelected("identify");
			return;
		});
		this.queryOne(".getSource").addEventListener("click",function(e1) {
			return _gthis.queryOne(".exampleCode").scrollIntoViewIfNeeded();
		});
		this.queryOne(".loadFile").addEventListener("change",function(e2) {
			return magic_File.fromHtmlFileInputElement(e2.currentTarget).then(function(files) {
				app_Store.getInstance().setState({ example : _gthis.props.state.example, inputFiles : files, stdout : _gthis.props.state.stdout, stderr : _gthis.props.state.stderr, outputFiles : _gthis.props.state.outputFiles});
				return;
			});
		});
		var i = 0;
		var _g = 0;
		var _g1 = this.query(".output");
		while(_g < _g1.length) {
			var output = _g1[_g];
			++_g;
			output.addEventListener("click",function(e3) {
				i += 1;
				_gthis.applicationDownload(e3.currentTarget.src,"output-" + (i - 1) + ".png");
				return;
			});
		}
	}
	,exampleSelected: function(name) {
		var _gthis = this;
		var ex = magic_ArrayExtensions.find(examples_Examples.list,function(e) {
			return e.name == name;
		});
		magic_Magic.call({ command : ex.command, files : this.props.state.inputFiles}).then(function(result) {
			app_Store.getInstance().setState({ example : ex, outputFiles : result.files, stdout : result.stdout, stderr : result.stderr, inputFiles : _gthis.props.state.inputFiles});
			return;
		});
	}
	,__class__: app_Layout
});
var app_Store = function(s) {
	this.stateChangeListeners = [];
	this.state = s;
};
app_Store.__name__ = true;
app_Store.getInstance = function() {
	if(app_Store.instance == null) {
		throw new js__$Boot_HaxeError("must call init() before getInstance()");
	}
	return app_Store.instance;
};
app_Store.init = function(state) {
	if(app_Store.instance != null) {
		throw new js__$Boot_HaxeError("instance already initialized");
	}
	app_Store.instance = new app_Store(state);
};
app_Store.prototype = {
	getState: function() {
		return this.state;
	}
	,setState: function(partialState) {
		var old = this.state;
		var tmp_1_example = this.state.example;
		var tmp_2 = this.state;
		var tmp_3 = partialState;
		this.state = { stdout : tmp_3.stdout, stderr : tmp_3.stderr, outputFiles : tmp_3.outputFiles, inputFiles : tmp_3.inputFiles, example : tmp_3.example};
		var _g = 0;
		var _g1 = this.stateChangeListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.onStateChange(old,this.state);
		}
	}
	,addStateChangeListener: function(l) {
		this.stateChangeListeners.push(l);
	}
	,__class__: app_Store
};
var app_Styles = function() { };
app_Styles.__name__ = true;
var examples_Examples = function() { };
examples_Examples.__name__ = true;
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = ((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if(((eof1) instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				total.addBytes(buf,0,len);
			}
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(((e1) instanceof haxe_io_Eof)) {
				var e2 = e1;
			} else {
				throw e;
			}
		}
		return total.getBytes();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
haxe_io_Path.__name__ = true;
haxe_io_Path.withoutDirectory = function(path) {
	var s = new haxe_io_Path(path);
	s.dir = null;
	return s.toString();
};
haxe_io_Path.prototype = {
	toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		if(o.__enum__ != null) {
			return $hxEnums[o.__enum__] == cl;
		} else {
			return false;
		}
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var magic_ArrayExtensions = function() { };
magic_ArrayExtensions.__name__ = true;
magic_ArrayExtensions.find = function(a,predicate) {
	var _g = 0;
	while(_g < a.length) {
		var i = a[_g];
		++_g;
		if(predicate(i)) {
			return i;
		}
	}
	return null;
};
magic_ArrayExtensions.findIndexOf = function(a,predicate,from) {
	if(from == null) {
		from = 0;
	}
	var _g = from;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(a[i])) {
			return i;
		}
	}
	return -1;
};
var magic_Dispatcher = function() { };
magic_Dispatcher.__name__ = true;
magic_Dispatcher.__isInterface__ = true;
magic_Dispatcher.prototype = {
	__class__: magic_Dispatcher
};
var magic_Dispatch = function() { };
magic_Dispatch.__name__ = true;
magic_Dispatch.get = function() {
	return new magic_Promise(function(resolve) {
		if((typeof(window) == "undefined" || typeof(window.fetch) == "undefined") && typeof(process) != "undefined") {
			if(!magic_Magic.config.ignoreNativeIM && magic_Exec.hasNativeIM()) {
				var tmp = magic_Dispatch.nativeIMDispatcher();
				resolve(tmp);
				return;
			}
		}
		if(!magic_Magic.config.ignoreMagica) {
			magic_MagicaDispatcher.isMagicaApiAvailable().then(function(magicaApiAvailable) {
				if(magicaApiAvailable) {
					var tmp1 = magic_Dispatch.magicaDispatcher();
					resolve(tmp1);
				} else {
					throw new js__$Boot_HaxeError("Magica API not available and not dispatcher found for this scenario;");
				}
				return;
			});
		} else {
			throw new js__$Boot_HaxeError("Native ImageMagick not found and/or magica disabled or not available");
		}
		return;
	});
};
magic_Dispatch.nativeIMDispatcher = function() {
	if(magic_Dispatch._nativeIMDispatcher == null) {
		magic_Dispatch._nativeIMDispatcher = new magic_NativeIMDispatcher();
	}
	return js_Boot.__cast(magic_Dispatch._nativeIMDispatcher , magic_Dispatcher);
};
magic_Dispatch.magicaDispatcher = function() {
	if(magic_Dispatch._magicaDispatcher == null) {
		magic_Dispatch._magicaDispatcher = new magic_MagicaDispatcher();
	}
	return js_Boot.__cast(magic_Dispatch._magicaDispatcher , magic_Dispatcher);
};
var magic_Exec = function() { };
magic_Exec.__name__ = true;
magic_Exec.hasNativeIM = function() {
	if(magic_Exec._hasNativeIM == null) {
		magic_Exec._hasNativeIM = !magic_Exec.commandThrows("convert",["-version"],"Version: ImageMagick");
	}
	return magic_Exec._hasNativeIM;
};
magic_Exec.commandThrows = function(cmd,args,stdoutIncludes) {
	var p = magic_IOUtil.execFileSync(cmd,args);
	if(p.code != 0) {
		return true;
	} else if(stdoutIncludes != null) {
		return p.stdout.indexOf(stdoutIncludes) == -1;
	} else {
		return false;
	}
};
var magic_File = function(_name,_content) {
	this.name = _name;
	this.content = _content;
};
magic_File.__name__ = true;
magic_File.fromFile = function(path,preserveDir) {
	var name = preserveDir == null ? haxe_io_Path.withoutDirectory(path) : path;
	var content = magic_IOUtil.readFile(path).readAll();
	return new magic_File(name,content);
};
magic_File.fromUrl = function(url) {
	return new magic_Promise(function(resolve) {
		magic_IOUtil.fetchResource(url,function(err,data) {
			if(err) {
				resolve(null);
				return;
			}
			var name = magic_Util.getFileNameFromUrl(url);
			var content = haxe_io_Bytes.ofData(data);
			resolve(new magic_File(name,content));
			return;
		});
		return;
	});
};
magic_File.toDataUrl = function(file,mime) {
	return "data:" + mime + ";" + file.name + "base64," + magic_File.toBase64(file);
};
magic_File.toBase64 = function(file) {
	return haxe_crypto_Base64.encode(file.content);
};
magic_File.fromBase64 = function(base64,name) {
	return new magic_File(name,haxe_crypto_Base64.decode(base64));
};
magic_File.fromDataUrl = function(dataUrl,name) {
	return magic_File.fromBase64(dataUrl.substring(dataUrl.indexOf(";base64,") + ";base64,".length),name);
};
magic_File.fromHtmlFileInputElement = function(el) {
	var _g = [];
	var _g1 = 0;
	var _g2 = el.files;
	while(_g1 < _g2.length) {
		var file = _g2[_g1];
		++_g1;
		_g.push(file);
	}
	return Promise.all(_g.map(function(file1) {
		return new Promise(function(resolve,reject) {
			var reader = new FileReader();
			reader.addEventListener("loadend",function(e) {
				resolve({ name : Std.string(file1) + "", content : new Uint8Array(reader.result)});
				return;
			});
			reader.readAsArrayBuffer(file1);
			return;
		});
	})).then(function(files) {
		return files.map(function(f) {
			var bytes = haxe_io_Bytes.ofData(f.content);
			var file2 = new magic_File(f.name + "",bytes);
			return file2;
		});
	});
};
magic_File.prototype = {
	asDataUrl: function(mime) {
		return magic_File.toDataUrl(this,mime);
	}
	,asBase64: function(file) {
		return magic_File.toBase64(file);
	}
	,__class__: magic_File
};
var magic_IOUtil = function() { };
magic_IOUtil.__name__ = true;
magic_IOUtil.fileExists = function(path) {
	if((typeof(window) == "undefined" || typeof(window.fetch) == "undefined") && typeof(process) != "undefined") {
		return require("fs").existsSync(path);
	} else {
		throw new js__$Boot_HaxeError("Not available in the browser");
	}
};
magic_IOUtil.execFileSync = function(cmd,args,cwd) {
	if((typeof(window) == "undefined" || typeof(window.fetch) == "undefined") && typeof(process) != "undefined") {
		try {
			var c = cmd + " " + args.map(function(a) {
				return "\"" + a + "\"";
			}).join(" ");
			var stdout = require("child_process").execSync(c,cwd == null ? null : { cwd : cwd});
			return { code : 0, stdout : stdout.toString(), stderr : ""};
		} catch( error ) {
			var error1 = ((error) instanceof js__$Boot_HaxeError) ? error.val : error;
			return { code : error1.code, stdout : "", stderr : error1.stderr};
		}
	} else {
		throw new js__$Boot_HaxeError("Not available in the browser");
	}
};
magic_IOUtil.fetch = function(url,cb) {
	magic_IOUtil.fetchResource(url,function(error,data) {
		if(error != null) {
			cb(error,null);
		} else {
			var bytes = haxe_io_Bytes.ofData(data);
			cb(null,new haxe_io_BytesInput(bytes));
		}
		return;
	});
};
magic_IOUtil.fetchResource = function(url,cb) {
	if((typeof(window) == "undefined" || typeof(window.fetch) == "undefined") && typeof(process) != "undefined") {
		require("https").get(url,function(resp) {
			var data = [];
			resp.on("data",function(chunk) {
				return data.push(chunk);
			});
			return resp.on("end",function(chunk1) {
				var body = Buffer.concat(data);
				cb(null,body);
				return null;
			});
		}).on("error",function(err) {
			cb(err,null);
			return;
		});
	} else {
		window.fetch(url).then(function(response) {
			return response.arrayBuffer().then(function(data1) {
				cb(null,data1);
				return;
			});
		});
	}
};
magic_IOUtil.readFile = function(path) {
	var s = require("fs").readFileSync(path);
	var bytes = haxe_io_Bytes.ofData(s);
	return new haxe_io_BytesInput(bytes);
};
magic_IOUtil.args = function() {
	return process.argv;
};
magic_IOUtil.exit = function(code) {
	return process.exit(code);
};
magic_IOUtil.readTextFile = function(path) {
	return require("fs").readFileSync(path).toString();
};
magic_IOUtil.writeFile = function(file,input) {
	var bytes = input.readAll();
	var tmp = require("fs");
	var tmp1 = Buffer.from(bytes.b);
	tmp.writeFileSync(file,tmp1);
	return;
};
magic_IOUtil.writeTextFile = function(path,s) {
	require("fs").writeFileSync(path,s);
};
var magic_Magic = function() { };
magic_Magic.__name__ = true;
magic_Magic.call = function(o) {
	return new magic_Promise(function(resolve) {
		magic_Dispatch.get().then(function(dispatcher) {
			dispatcher.call(o).then(resolve);
			return;
		});
		return;
	});
};
magic_Magic.exec = function(o) {
	return new magic_Promise(function(resolve) {
		magic_Magic.execToCallOptions(o).then(function(callOptions) {
			return new magic_Promise(function(resolve1) {
				magic_Dispatch.get().then(function(dispatcher) {
					dispatcher.call(callOptions).then(resolve1);
					return;
				});
				return;
			});
		});
		return;
	});
};
magic_Magic.execToCallOptions = function(o) {
	throw new js__$Boot_HaxeError("not Implemented");
};
var magic_MagicaDispatcher = function() {
};
magic_MagicaDispatcher.__name__ = true;
magic_MagicaDispatcher.__interfaces__ = [magic_Dispatcher];
magic_MagicaDispatcher.getMagicaEntryPoint = function() {
	if(typeof(window) != "undefined" && typeof(window.Magica) != "undefined" && typeof(window.Magica.main) == "function") {
		return magic_Promise.resolve(window.Magica);
	} else if(typeof(window) == "undefined" && typeof(process) != "undefined") {
		return magic_Promise.resolve(require(magic_MagicaDispatcher.magicaFolder() + "/node_modules/magica"));
	} else {
		throw new js__$Boot_HaxeError("Library magica is not available");
	}
};
magic_MagicaDispatcher.isMagicaApiAvailable = function() {
	return new magic_Promise(function(resolve) {
		if((typeof(window) == "undefined" || typeof(window.fetch) == "undefined") && typeof(process) != "undefined") {
			if(magic_MagicaDispatcher._isMagicaApiAvailable != null) {
				resolve(magic_MagicaDispatcher._isMagicaApiAvailable);
				return;
			}
			if(magic_MagicaDispatcher.ensureMagicaInstall()) {
				if(magic_MagicaDispatcher.checkMagicaInstall()) {
					magic_MagicaDispatcher._isMagicaApiAvailable = true;
					resolve(true);
				} else {
					haxe_Log.trace("There where problems installing npm package magica. 22222",{ fileName : "magic/MagicaDispatcher.hx", lineNumber : 62, className : "magic.MagicaDispatcher", methodName : "isMagicaApiAvailable"});
					resolve(false);
				}
			} else {
				haxe_Log.trace("There where problems installing npm package magica.",{ fileName : "magic/MagicaDispatcher.hx", lineNumber : 66, className : "magic.MagicaDispatcher", methodName : "isMagicaApiAvailable"});
				resolve(false);
			}
		} else if(typeof(window) != "undefined" && typeof(window.Magica) != "undefined" && typeof(window.Magica.main) == "function") {
			magic_MagicaDispatcher._isMagicaApiAvailable = true;
			resolve(true);
		} else {
			resolve(false);
		}
		return;
	});
};
magic_MagicaDispatcher.checkMagicaInstall = function() {
	if(!magic_IOUtil.fileExists(magic_MagicaDispatcher.magicaFolder()) || !magic_IOUtil.fileExists(magic_MagicaDispatcher.magicaFolder() + "/node_modules/magica")) {
		return false;
	}
	try {
		if(typeof(require(magic_MagicaDispatcher.magicaFolder() + "/node_modules/magica")) != "undefined") {
			return typeof(require(magic_MagicaDispatcher.magicaFolder() + "/node_modules/magica").main) == "function";
		} else {
			return false;
		}
	} catch( ex ) {
		haxe_Log.trace("error while requiring magica: ",{ fileName : "magic/MagicaDispatcher.hx", lineNumber : 96, className : "magic.MagicaDispatcher", methodName : "checkMagicaInstall", customParams : [Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex)]});
		return false;
	}
};
magic_MagicaDispatcher.magicaFolder = function() {
	var ss = process.env.HOME + "";
	var _this_r = new RegExp("\\\\","g".split("u").join(""));
	ss = ss.replace(_this_r,"/");
	return ss + "/.magic/magic-npm-project";
};
magic_MagicaDispatcher.ensureMagicaInstall = function() {
	if(!magic_MagicaDispatcher.checkMagicaInstall()) {
		if(!magic_IOUtil.fileExists(magic_MagicaDispatcher.magicaFolder())) {
			var tmp = require("fs");
			var tmp1 = magic_MagicaDispatcher.magicaFolder();
			tmp.mkdirSync(tmp1,{ recursive : true});
		}
		if(!magic_IOUtil.fileExists(magic_MagicaDispatcher.magicaFolder() + "/package.json")) {
			var r = magic_IOUtil.execFileSync("npm",["init","-y"],magic_MagicaDispatcher.magicaFolder());
			if(r.code != 0) {
				throw new js__$Boot_HaxeError("There where problems installing npm package magica. - when executing npm init -y " + ["init","-y",magic_MagicaDispatcher.magicaFolder()].join(" "));
			}
		}
		var r1 = magic_IOUtil.execFileSync("npm",["install","--save","magica"],magic_MagicaDispatcher.magicaFolder());
		if(r1.code != 0) {
			haxe_Log.trace("There where problems installing npm package magica. - when executing npm install " + ["install","--save","magica",magic_MagicaDispatcher.magicaFolder()].join(" "),{ fileName : "magic/MagicaDispatcher.hx", lineNumber : 122, className : "magic.MagicaDispatcher", methodName : "ensureMagicaInstall", customParams : [r1]});
			throw new js__$Boot_HaxeError("There where problems installing npm package magica. - when executing npm install " + ["install","--save","magica",magic_MagicaDispatcher.magicaFolder()].join(" "));
		}
		return magic_MagicaDispatcher.checkMagicaInstall();
	}
	return true;
};
magic_MagicaDispatcher.prototype = {
	call: function(o) {
		return new magic_Promise(function(resolve) {
			magic_MagicaDispatcher.getMagicaEntryPoint().then(function(magica) {
				var o1 = o.command;
				var tmp = o.files.map(function(f) {
					return { name : f.name, content : f.content.b.bufferValue.bytes};
				});
				magica.main({ command : o1, inputFiles : tmp}).then(function(magicaResults) {
					var r = { files : magicaResults.outputFiles, stdout : magicaResults.stdout.join("\n"), stderr : magicaResults.stderr.join("\n"), error : magicaResults.error, code : magicaResults.error == null ? 0 : 1};
					resolve(r);
					return;
				});
				return;
			});
			return;
		});
	}
	,__class__: magic_MagicaDispatcher
};
var magic_NativeIMDispatcher = function() {
};
magic_NativeIMDispatcher.__name__ = true;
magic_NativeIMDispatcher.__interfaces__ = [magic_Dispatcher];
magic_NativeIMDispatcher.prototype = {
	call: function(o) {
		var o1 = o.command[0];
		var _g = [];
		var _g1 = 1;
		var _g2 = o.command.length;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(o.command[i]);
		}
		var p = magic_IOUtil.execFileSync(o1,_g);
		return magic_Promise.resolve({ code : p.code, stdout : p.stdout, stderr : p.stderr, files : [], error : null});
	}
	,__class__: magic_NativeIMDispatcher
};
var magic_Promise = function(fn) {
	var _gthis = this;
	this.resolveListeners = [];
	fn(function(t) {
		_gthis.resolvedWith = t;
		var _g = 0;
		var _g1 = _gthis.resolveListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(t);
		}
		return;
	});
};
magic_Promise.__name__ = true;
magic_Promise.resolve = function(t) {
	return new magic_Promise(function(resolve) {
		resolve(t);
		return;
	});
};
magic_Promise.prototype = {
	then: function(l) {
		this.resolveListeners.push(l);
		if(this.resolvedWith != null) {
			l(this.resolvedWith);
		}
	}
	,__class__: magic_Promise
};
var magic_StructureTools = function() { };
magic_StructureTools.__name__ = true;
magic_StructureTools.assign = function(o1,o2,o3) {
	var fields = Reflect.fields(o1).concat(Reflect.fields(o2)).concat(Reflect.fields(o3));
	var _g = 0;
	while(_g < fields.length) {
		var f = fields[_g];
		++_g;
		var v = Reflect.field(o3,f) || Reflect.field(o2,f) || Reflect.field(o1,f);
		o1[f] = v;
	}
	return o1;
};
var magic_Util = function() { };
magic_Util.__name__ = true;
magic_Util.getFileNameFromUrl = function(url) {
	var hashIndex = url.indexOf("#");
	url = hashIndex != -1 ? url.substring(0,hashIndex) : url;
	var s = url.split("/").pop();
	s = s == null ? "" : s;
	var _this_r = new RegExp("[\\?].*$","g".split("u").join(""));
	return s.replace(_this_r,"");
};
magic_Util.urlToBase64 = function(s) {
	return s.substring(s.indexOf(";base64,") + ";base64,".length);
};
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
app_Styles.css = "  \nbody {\n  background: linear-gradient(45deg, rgb(209, 192, 192) 25%, transparent 26%, transparent 75%, rgb(209, 192, 192) 76%),\n    linear-gradient(-45deg, rgb(209, 192, 192) 25%, transparent 26%, transparent 75%, rgb(209, 192, 192) 76%);\n  background-color: rgb(161, 179, 206);\n  background-size: 100px 100px;\n}\nimg {\n  cursor: pointer;\n}\ntextarea {\n  height: 122px;\n}\n.selected {\n  border: 2px solid pink;\n}\n  ";
examples_Examples.list = [{ name : "identify", command : ["identify","rose:"]}];
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
magic_Magic.config = { ignoreNativeIM : false, magicaOnlyBrowser : false, ignoreMagica : false};
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=main.js.map